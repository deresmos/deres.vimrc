defx = '''
  setlocal signcolumn=no
  setlocal listchars=

  " mappings {{{3
  nnoremap <silent><buffer><expr> yy defx#do_action('copy')
  nnoremap <silent><buffer><expr> dd defx#do_action('move')
  nnoremap <silent><buffer><expr> p defx#do_action('paste')

  nnoremap <silent><buffer><expr> <CR> defx#do_action('multi',
    \ [['call', 'DefxPreCommand'], ['drop']])
  nnoremap <silent><buffer><expr> <C-M> defx#do_action('multi',
    \ [['call', 'DefxPreCommand'], ['drop']])
  nnoremap <silent><buffer><expr> l defx#do_action('open_tree', 'toggle')
  nnoremap <silent><buffer><expr> L defx#do_action('open')
  nnoremap <silent><buffer><expr> h defx#do_action('cd', ['..'])
  nnoremap <silent><buffer><expr> v defx#do_action('multi',
    \ [['call', 'DefxPreCommand'], ['drop', 'vsplit']])
  nnoremap <silent><buffer><expr> <C-s> defx#do_action('multi',
    \ [['call', 'DefxPreCommand'], ['drop', 'split']])
  nnoremap <silent><buffer><expr> t defx#do_action('multi',
    \ [['call', 'DefxPreCommand'], ['drop', 'tabedit']])
  nnoremap <silent><buffer><expr> P defx#do_action('open', 'pedit')
  nnoremap <silent><buffer><expr> o defx#do_action('open_tree', 'toggle')

  nnoremap <silent><buffer><expr> K defx#do_action('new_file')
  " nnoremap <silent><buffer><expr> N defx#do_action('new_file')
  nnoremap <silent><buffer><expr> M defx#do_action('new_multiple_files')
  nnoremap <silent><buffer><expr> C
    \ defx#do_action('toggle_columns', 'mark:indent:icons:filename')

  " nnoremap <silent><buffer><expr> st defx#do_action('toggle_sort', 'time')
  " nnoremap <silent><buffer><expr> sf defx#do_action('toggle_sort', 'filename')
  " nnoremap <silent><buffer><expr> ss defx#do_action('toggle_sort', 'size')
  " nnoremap <silent><buffer><expr> se defx#do_action('toggle_sort', 'extension')

  nnoremap <silent><buffer><expr> D defx#do_action('remove')
  nnoremap <silent><buffer><expr> r defx#do_action('rename')
  nnoremap <silent><buffer><expr> ! defx#do_action('execute_command')
  nnoremap <silent><buffer><expr> x defx#do_action('execute_system')
  nnoremap <silent><buffer><expr> Y defx#do_action('yank_path')
  nnoremap <silent><buffer><expr> . defx#do_action('toggle_ignored_files')
  nnoremap <silent><buffer><expr> ; defx#do_action('repeat')
  nnoremap <silent><buffer><expr> ~ defx#do_action('cd')
  nnoremap <silent><buffer><expr> q defx#do_action('quit')
  nnoremap <silent><buffer><expr> <Space><Space> defx#do_action('toggle_select') . 'j'
  nnoremap <silent><buffer><expr> * defx#do_action('toggle_select_all')
  nnoremap <silent><buffer><expr> <C-l> defx#do_action('redraw')
  nnoremap <silent><buffer><expr> <C-g> defx#do_action('print')
  nnoremap <silent><buffer><expr> cd defx#do_action('change_vim_cwd')

  nnoremap <silent><buffer><expr> <SPACE>fg
    \ defx#do_action('call', 'DefxDeniteGrep')
  nnoremap <silent><buffer><expr> <SPACE>ff
    \ defx#do_action('call', 'DefxDeniteFile')
  nnoremap <silent><buffer><expr> ds
    \ defx#do_action('call', 'DefxSetDiffSource')
  nnoremap <silent><buffer><expr> dt
    \ defx#do_action('call', 'DefxSetDiffTarget')
  nnoremap <silent><buffer><expr> do
    \ defx#do_action('call', 'DefxOpenDiffDir')
  nnoremap <silent><buffer><expr> <SPACE>dcd
    \ defx#do_action('call', 'DefxSaveDeniteCWD')

  nmap <silent><buffer> <SPACE>gk <Plug>(defx-git-prev)
  nmap <silent><buffer> <SPACE>gj <Plug>(defx-git-next)

  " functions {{{3
  function! DefxSaveDeniteCWD(context) abort
    let defx_target_path = a:context.targets[0]
    let g:denite_cwd = defx_target_path
    echo 'Change denite_cwd' . defx_target_path
  endfunction

  function! DefxPreCommand(context) abort
    if a:context.buffer_name == 'defx-floating'
      quit
    elseif a:context.buffer_name == 'defx-tree'
      wincmd p
    endif
  endfunction

  function! DefxSetDiffSource(context) abort
    let g:defx_diff_source = a:context.targets[0]
    echo 'Set diff source:' g:defx_diff_source
  endfunction

  function! DefxSetDiffTarget(context) abort
    let g:defx_diff_target = a:context.targets[0]
    echo 'Set diff target:' g:defx_diff_target
  endfunction

  function! DefxOpenDiffDir(...) abort
    tabedit
    execute 'DirDiff' g:defx_diff_source g:defx_diff_target
  endfunction

  function! DefxDeniteGrep(context) abort
    call DefxPreCommand(a:context)
    let dirpath = fnamemodify(a:context.targets[0], ':p:h')
    let g:denite_cwd = dirpath
    exec 'Denite grep -no-empty -path=' . dirpath '-start-filter'
  endfunction

  function! DefxDeniteFile(context) abort
    call DefxPreCommand(a:context)
    let dirpath = fnamemodify(a:context.targets[0], ':p:h')
    let g:denite_cwd = dirpath
    exec 'Denite file/rec -no-empty -path=' . dirpath '-start-filter'
  endfunction
'''
